<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="2f60d2bf-a087-491f-9f07-a95b0f6a4896" activeEnvironment="Default" name="Teamcity Integration" resourceRoot="" soapui-version="5.2.1" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="basicAuthTestSuite"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="/account TestCase"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Select Report Type" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:RestService" id="73d3b664-b302-4af4-b3ae-69ceb802a4ee" wadlVersion="http://wadl.dev.java.net/2009/02" name="Basic auth service to create a user account" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:description xsi:nil="true"/><con:settings/><con:definitionCache type="TEXT" rootPart=""/><con:endpoints><con:endpoint>http://localhost:81</con:endpoint></con:endpoints><con:resource name="/account" path="/account" id="2f21b314-3696-4210-9a82-60b87fc8d45b"><con:settings/><con:parameters/><con:method name="GET" id="44df8a47-04b4-46a6-8aab-04f4f4981594" method="GET"><con:description>Retrive an Account object.

</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>Username</con:name><con:style>QUERY</con:style><con:description>Unique Username - typically email address.</con:description></con:parameter><con:parameter required="true"><con:name>Franchise</con:name><con:style>QUERY</con:style><con:description>The franchise that this account is being created for.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>400</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:request name="Request 1" id="ad93850f-b07d-42f3-a08a-1d9bffe38c13" mediaType="application/json"><con:settings/><con:parameters/></con:request></con:method><con:method name="POST" id="013a1c88-6f41-46aa-bd1f-32839a57f622" method="POST"><con:description>Creates `Account` objects.

</con:description><con:settings/><con:parameters><con:parameter required="true"><con:name>Username</con:name><con:style>QUERY</con:style><con:description>Unique Username - typically email address.</con:description></con:parameter><con:parameter required="true"><con:name>Password</con:name><con:style>QUERY</con:style><con:description>The unique password for the user.</con:description></con:parameter><con:parameter required="true"><con:name>Franchise</con:name><con:style>QUERY</con:style><con:description>The franchise that this account is being created for.</con:description></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>405</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>406</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json</con:mediaType><con:status>501</con:status><con:params/></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType xsi:nil="true"/><con:status>404</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="Request 1" id="dab6cbf4-af30-4b46-9287-0fb272afe698" mediaType="application/json"><con:settings/><con:parameters/></con:request></con:method></con:resource></con:interface><con:testSuite id="be7bb284-9d83-4927-b657-275d423565c8" name="basicAuthTestSuite"><con:description>TestSuite generated for REST Service [Basic auth service to create a user account]</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="68a86be8-9908-4db1-9eb4-41cf917aa125" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="/account TestCase" searchProperties="true"><con:description>TestCase generated for REST Resource [/account] located at [/account]</con:description><con:settings/><con:testStep type="restrequest" name="getAccount - Successful" id="318e7ae1-897d-4699-812d-2accb6945204"><con:settings/><con:config service="Basic auth service to create a user account" resourcePath="/account" methodName="GET" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAccount - Successful" id="ad93850f-b07d-42f3-a08a-1d9bffe38c13" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8088</con:endpoint><con:request/><con:originalUri>http://localhost/account</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="30fee3b0-e547-4392-b7f1-674399e64c5e" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Franchise" value="RBS"/>
  <con:entry key="Username" value="ralph.bragg@rbs.com"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="getAccountFail - InvalidFranchise" id="e9382198-5b26-47d1-8de3-111a35b841ca"><con:settings/><con:config service="Basic auth service to create a user account" methodName="GET" resourcePath="/account" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="getAccountFail - InvalidFranchise" id="99abacdf-4e9c-444d-ad95-3530933bfdbe" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8088</con:endpoint><con:request/><con:originalUri>http://localhost/account</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="e5725cc0-3508-4fdb-b697-c5a1e0441d23" name="Valid HTTP Status Codes"><con:configuration><codes>406</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Franchise" value="SOCGEN"/>
  <con:entry key="Username" value="ralph.bragg@rbs.com"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="createAccount - Successful" id="87d13d60-8a06-46a1-b64e-ecc8da686f09"><con:settings/><con:config service="Basic auth service to create a user account" resourcePath="/account" methodName="POST" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="createAccount - Successful" id="dab6cbf4-af30-4b46-9287-0fb272afe698" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>http://localhost:8088</con:endpoint><con:request/><con:originalUri>http://localhost/account</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="b4dcfea1-95bd-4eb9-823e-421aa37f7970" name="Valid HTTP Status Codes"><con:configuration><codes>200
</codes></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="Franchise" value="RBS"/>
  <con:entry key="Password" value="Password1"/>
  <con:entry key="Username" value="ralph.bragg@rbs.com"/>
</con:parameters></con:restRequest></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:restMockService id="5b90f304-1e25-4796-acf5-ba10102140e9" port="8088" path="/" host="localhost" name="basicAuthMockService" docroot=""><con:description>A set of mock services neccessary to support and test that APIs</con:description><con:settings/><con:properties/><con:restMockAction name="/account" method="GET" resourcePath="/account" id="f4e1535e-e523-48a2-be5f-fc7c33031447"><con:settings/><con:defaultResponse>Response 1</con:defaultResponse><con:dispatchStyle>SEQUENCE</con:dispatchStyle><con:dispatchPath>/*
// Script dispatcher is used to select a response based on the incoming request.
// Here are few examples showing how to match based on path, query param, header and body

// Match based on path
def requestPath = mockRequest.getPath()
log.info "Path: "+ requestPath

if( requestPath.contains("json") )
{
    // return the name of the response you want to dispatch
    return "JSON Response"
}


// Match based on query parameter
def queryString = mockRequest.getRequest().getQueryString()
log.info "QueryString: " + queryString

if( queryString.contains("stockholm") )
{
    // return the name of the response you want to dispatch
    return "Response Stockholm"
}
else if( queryString.contains("london") )
{
    // return the name of the response you want to dispatch
    return "Response London"
}


// Match based on header
def acceptEncodingHeaderList = mockRequest.getRequestHeaders().get("Accept-Encoding")
log.info "AcceptEncoding Header List: " + acceptEncodingHeaderList

if( acceptEncodingHeaderList.contains("gzip,deflate") )
{
    // return the name of the response you want to dispatch
    return "GZiped Response"
}


// Match based on body
def requestBody = mockRequest.getRequestContent()
log.info "Request body: " + requestBody

if( requestBody.contains("some data") )
{
    // return the name of the response you want to dispatch
    return "Response N"
}
*/
</con:dispatchPath><con:response name="Response 1" id="d8211fd9-50d8-4b1b-b511-23f30e8eea2a" httpResponseStatus="200"><con:settings/><con:responseContent>{
  "name": "ralph.bragg",
  "franchise": "RBS",
  "status": "new"
}</con:responseContent></con:response></con:restMockAction></con:restMockService><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/><con:sensitiveInformation/></con:soapui-project>